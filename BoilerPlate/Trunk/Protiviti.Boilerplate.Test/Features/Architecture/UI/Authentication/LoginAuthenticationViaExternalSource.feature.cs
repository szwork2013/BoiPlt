// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Protiviti.Boilerplate.Test.Features.Architecture.UI.Authentication
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class LoginAuthenticationViaExternalSourceFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "LoginAuthenticationViaExternalSource.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "LoginAuthenticationViaExternalSource", "In order to login with facebook or google\r\nAs a external user\r\nI want to be enter" +
                    " my external username and password", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "LoginAuthenticationViaExternalSource")))
            {
                Protiviti.Boilerplate.Test.Features.Architecture.UI.Authentication.LoginAuthenticationViaExternalSourceFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Presence of \'Login with Google+/Facebook\' Button")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LoginAuthenticationViaExternalSource")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rohit_ExternalLogin")]
        public virtual void PresenceOfLoginWithGoogleFacebookButton()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Presence of \'Login with Google+/Facebook\' Button", new string[] {
                        "Rohit_ExternalLogin"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("I am on Login Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.When("I click on Login button on the header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "ButtonName"});
            table1.AddRow(new string[] {
                        "Connect with Google+"});
            table1.AddRow(new string[] {
                        "Connect With Facebook"});
#line 10
 testRunner.Then("I should see following buttons on the page", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Successful Login with Google Account")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LoginAuthenticationViaExternalSource")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rohit_ExternalLogin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        public virtual void SuccessfulLoginWithGoogleAccount()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Successful Login with Google Account", new string[] {
                        "Rohit_ExternalLogin",
                        "Must"});
#line 20
this.ScenarioSetup(scenarioInfo);
#line 21
 testRunner.Given("I am on Login Page and I click on the header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "ButtonName"});
            table2.AddRow(new string[] {
                        "Connect with Google+"});
#line 22
 testRunner.When("I click on following button", ((string)(null)), table2, "When ");
#line 26
 testRunner.And("I enter valid credentials in the pop-up window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.And("I enter a valid username in the portal to register", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.Then("I am successfully logged in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Successful Login with Facebook Account")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LoginAuthenticationViaExternalSource")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rohit_ExternalLogin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Pending")]
        public virtual void SuccessfulLoginWithFacebookAccount()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Successful Login with Facebook Account", new string[] {
                        "Rohit_ExternalLogin",
                        "Pending"});
#line 33
this.ScenarioSetup(scenarioInfo);
#line 34
 testRunner.Given("I am on the portal\'s Login Page and I click on the header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "ButtonName"});
            table3.AddRow(new string[] {
                        "Connect With Facebook"});
#line 35
 testRunner.When("I click on following facebook button", ((string)(null)), table3, "When ");
#line 38
 testRunner.And("I enter valid credentials of facebookaccount in the pop-up window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
 testRunner.And("I enter a valid username and password in the portal to register", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.Then("I am successfully logged with fb account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("To Verify that registered user name is displayed when logged in with Google+")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LoginAuthenticationViaExternalSource")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rohit_ExternalLogin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        public virtual void ToVerifyThatRegisteredUserNameIsDisplayedWhenLoggedInWithGoogle()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("To Verify that registered user name is displayed when logged in with Google+", new string[] {
                        "Rohit_ExternalLogin",
                        "Must"});
#line 45
this.ScenarioSetup(scenarioInfo);
#line 46
testRunner.Given("I am on Login Page and I click on the header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "External Account"});
            table4.AddRow(new string[] {
                        "Google"});
#line 47
testRunner.When("I Login with following Accounts", ((string)(null)), table4, "When ");
#line 50
testRunner.Then("Registered username should be displayed on the header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("To Verify that registered user name is displayed when logged in with Facebook")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LoginAuthenticationViaExternalSource")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rohit_ExternalLogin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Pending")]
        public virtual void ToVerifyThatRegisteredUserNameIsDisplayedWhenLoggedInWithFacebook()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("To Verify that registered user name is displayed when logged in with Facebook", new string[] {
                        "Rohit_ExternalLogin",
                        "Must",
                        "Pending"});
#line 55
this.ScenarioSetup(scenarioInfo);
#line 56
testRunner.Given("I am on the portal\'s Login Page and I click on the header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "External Account"});
            table5.AddRow(new string[] {
                        "Facebook"});
#line 57
testRunner.When("I Login with following facebook Account", ((string)(null)), table5, "When ");
#line 61
testRunner.Then("Registered username on portal should be displayed on the header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("To Verify that change password and profile options are not displayed to external " +
            "user")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "LoginAuthenticationViaExternalSource")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rohit_ExternalLogin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        public virtual void ToVerifyThatChangePasswordAndProfileOptionsAreNotDisplayedToExternalUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("To Verify that change password and profile options are not displayed to external " +
                    "user", new string[] {
                        "Rohit_ExternalLogin",
                        "Must"});
#line 65
this.ScenarioSetup(scenarioInfo);
#line 66
testRunner.Given("I am on Login Page and I click on the header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "External Account"});
            table6.AddRow(new string[] {
                        "Google"});
#line 67
testRunner.When("I Login with following Accounts", ((string)(null)), table6, "When ");
#line 71
testRunner.And("I click on the username displayed on the header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
testRunner.Then("following buttons are not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
