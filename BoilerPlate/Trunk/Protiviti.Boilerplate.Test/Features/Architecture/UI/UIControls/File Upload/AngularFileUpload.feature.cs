// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Protiviti.Boilerplate.Test.Features.Architecture.UI.UIControls.FileUpload
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class AngularFileUploadFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "AngularFileUpload.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "AngularFileUpload", "In order to upload a file \r\nAs a user\r\nI want to select a file from my local mach" +
                    "ine and click on \'Submit\' button", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "AngularFileUpload")))
            {
                Protiviti.Boilerplate.Test.Features.Architecture.UI.UIControls.FileUpload.AngularFileUploadFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Presence of FileName text-field")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rohan_AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        public virtual void PresenceOfFileNameText_Field()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Presence of FileName text-field", new string[] {
                        "Rohan_AngularFileUpload",
                        "Must"});
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
 testRunner.Given("I am on Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
 testRunner.When("I navigate to File Upload page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
 testRunner.Then("I should see a FileTitle text-field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Presence of FileTitle label")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rohan_AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AngularFileUpload")]
        public virtual void PresenceOfFileTitleLabel()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Presence of FileTitle label", new string[] {
                        "Rohan_AngularFileUpload",
                        "Must",
                        "AngularFileUpload"});
#line 16
this.ScenarioSetup(scenarioInfo);
#line 17
 testRunner.Given("I am on Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 18
 testRunner.When("I navigate to File Upload page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 19
 testRunner.Then("I should see a \'File Title\' label", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Presence of File Name label")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rohan_AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AngularFileUpload")]
        public virtual void PresenceOfFileNameLabel()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Presence of File Name label", new string[] {
                        "Rohan_AngularFileUpload",
                        "Must",
                        "AngularFileUpload"});
#line 24
this.ScenarioSetup(scenarioInfo);
#line 25
 testRunner.Given("I am on Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 26
 testRunner.When("I navigate to File Upload page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 27
 testRunner.Then("I should see a \'File Name\' label", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Presence of Submit button")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rohan_AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AngularFileUpload")]
        public virtual void PresenceOfSubmitButton()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Presence of Submit button", new string[] {
                        "Rohan_AngularFileUpload",
                        "Must",
                        "AngularFileUpload"});
#line 32
this.ScenarioSetup(scenarioInfo);
#line 33
 testRunner.Given("I am on Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 34
 testRunner.When("I navigate to File Upload page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 35
 testRunner.Then("I should see \'Submit\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void SubmitButtonDisabledOnNoFileSelection(string fileTitle, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Rohan_AngularFileUpload",
                    "Must",
                    "AngularFileUpload"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Submit Button Disabled on No File Selection", @__tags);
#line 40
this.ScenarioSetup(scenarioInfo);
#line 41
 testRunner.Given("I am on File Upload page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 42
 testRunner.When(string.Format("I enter \"{0}\" in FileTitle text-field", fileTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 43
 testRunner.And("I don\'t select any file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
 testRunner.Then("Submit button should be disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Submit Button Disabled on No File Selection")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rohan_AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "file1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileTitle", "file1")]
        public virtual void SubmitButtonDisabledOnNoFileSelection_File1()
        {
            this.SubmitButtonDisabledOnNoFileSelection("file1", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Submit Button Disabled on No File Selection")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rohan_AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "file2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileTitle", "file2")]
        public virtual void SubmitButtonDisabledOnNoFileSelection_File2()
        {
            this.SubmitButtonDisabledOnNoFileSelection("file2", ((string[])(null)));
        }
        
        public virtual void SubmitButtonEnabledOnFileSelection(string fileTitle, string file, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Rohan_AngularFileUpload",
                    "Must",
                    "AngularFileUpload"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Submit Button Enabled on File Selection", @__tags);
#line 53
this.ScenarioSetup(scenarioInfo);
#line 54
 testRunner.Given("I am on File Upload page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 55
 testRunner.When(string.Format("I enter \"{0}\" in FileTitle text-field", fileTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 56
 testRunner.And(string.Format("I select file \"{0}\"", file), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
 testRunner.Then("Submit button should be enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Submit Button Enabled on File Selection")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rohan_AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "file3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileTitle", "file3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:File", "Desert")]
        public virtual void SubmitButtonEnabledOnFileSelection_File3()
        {
            this.SubmitButtonEnabledOnFileSelection("file3", "Desert", ((string[])(null)));
        }
        
        public virtual void ProgressBarOnFileUpload(string fileTitle, string file, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Could"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Progress Bar on File Upload", @__tags);
#line 64
this.ScenarioSetup(scenarioInfo);
#line 65
 testRunner.Given("I am on File Upload page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 66
 testRunner.When(string.Format("I enter \"{0}\" in FileTitle text-field", fileTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 67
 testRunner.And(string.Format("I select file \"{0}\"", file), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
 testRunner.And("I click on \'Submit\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
 testRunner.Then("I should see the progress bar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 70
 testRunner.And("The progress bar should display upload percentage \'%\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Progress Bar on File Upload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Could")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "file5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileTitle", "file5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:File", "Desert")]
        public virtual void ProgressBarOnFileUpload_File5()
        {
            this.ProgressBarOnFileUpload("file5", "Desert", ((string[])(null)));
        }
        
        public virtual void SuccessfulUpload(string fileTitle, string file, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Could"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Successful Upload", @__tags);
#line 77
this.ScenarioSetup(scenarioInfo);
#line 78
 testRunner.Given("I am on File Upload page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 79
 testRunner.When(string.Format("I enter \"{0}\" in FileTitle text-field", fileTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 80
 testRunner.And(string.Format("I select file \"{0}\"", file), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
 testRunner.And("I click on \'Submit\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
 testRunner.Then("I should see a message \'Upload Successful\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 83
 testRunner.And("The progress bar shows \'100\' percentage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Successful Upload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Could")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "file6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileTitle", "file6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:File", "Desert")]
        public virtual void SuccessfulUpload_File6()
        {
            this.SuccessfulUpload("file6", "Desert", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Presence of Uploaded Files Grid")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rohan_AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AngularFileUpload")]
        public virtual void PresenceOfUploadedFilesGrid()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Presence of Uploaded Files Grid", new string[] {
                        "Rohan_AngularFileUpload",
                        "Must",
                        "AngularFileUpload"});
#line 91
this.ScenarioSetup(scenarioInfo);
#line 92
 testRunner.Given("I am on Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 93
 testRunner.When("I navigate to File Upload page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Title",
                        "Uploaded Date",
                        "Size(Kb)"});
#line 94
 testRunner.Then("I should see a \'Uploaded Files\' Grid having following column names :", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Pagination of Uploaded Files Grid")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rohan_AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AngularFileUpload")]
        public virtual void PaginationOfUploadedFilesGrid()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Pagination of Uploaded Files Grid", new string[] {
                        "Rohan_AngularFileUpload",
                        "Must",
                        "AngularFileUpload"});
#line 100
this.ScenarioSetup(scenarioInfo);
#line 101
 testRunner.Given("I am on File Upload page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 102
 testRunner.When("I view the Uploaded Files Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 103
 testRunner.Then("I should see a button for \"First Page\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 104
 testRunner.And("I should see a button for \"Previous Page\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 105
 testRunner.And("I should see a button for \"Next Page\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
 testRunner.And("I should see the current page number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void SortingUploadedFilesGrid(string sortDirection, string columnName, string sortMethod, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Pending",
                    "AngularFileUpload"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Sorting Uploaded Files Grid", @__tags);
#line 110
this.ScenarioSetup(scenarioInfo);
#line 111
 testRunner.Given("I am on File Upload page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 112
 testRunner.And("I see Uploaded Files Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 113
 testRunner.When(string.Format("I click sort \"{0}\" on column \"{1}\"", sortDirection, columnName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 114
 testRunner.Then(string.Format("The grid results should be sorted \"{0}\"", sortMethod), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Sorting Uploaded Files Grid")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Pending")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Sort Direction", "Ascending")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Column Name", "Name")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Sort Method", "Alphabetically")]
        public virtual void SortingUploadedFilesGrid_Variant0()
        {
            this.SortingUploadedFilesGrid("Ascending", "Name", "Alphabetically", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Sorting Uploaded Files Grid")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Pending")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Sort Direction", "Descending")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Column Name", "Name")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Sort Method", "Reverse-Alphabetically")]
        public virtual void SortingUploadedFilesGrid_Variant1()
        {
            this.SortingUploadedFilesGrid("Descending", "Name", "Reverse-Alphabetically", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Sorting Uploaded Files Grid")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Pending")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Sort Direction", "Ascending")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Column Name", "Title")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Sort Method", "Alphabetically")]
        public virtual void SortingUploadedFilesGrid_Variant2()
        {
            this.SortingUploadedFilesGrid("Ascending", "Title", "Alphabetically", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Sorting Uploaded Files Grid")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Pending")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Sort Direction", "Descending")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Column Name", "Title")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Sort Method", "Reverse-Alphabetically")]
        public virtual void SortingUploadedFilesGrid_Variant3()
        {
            this.SortingUploadedFilesGrid("Descending", "Title", "Reverse-Alphabetically", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Sorting Uploaded Files Grid")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Pending")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Sort Direction", "Ascending")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Column Name", "Upload Date")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Sort Method", "YY-MM-DD wise")]
        public virtual void SortingUploadedFilesGrid_Variant4()
        {
            this.SortingUploadedFilesGrid("Ascending", "Upload Date", "YY-MM-DD wise", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Sorting Uploaded Files Grid")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Pending")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Sort Direction", "Descending")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Column Name", "Upload Date")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Sort Method", "YY-MM-DD wise")]
        public virtual void SortingUploadedFilesGrid_Variant5()
        {
            this.SortingUploadedFilesGrid("Descending", "Upload Date", "YY-MM-DD wise", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Sorting Uploaded Files Grid")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Pending")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Sort Direction", "Ascending")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Column Name", "Size(Bytes)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Sort Method", "in Numerical order")]
        public virtual void SortingUploadedFilesGrid_Variant6()
        {
            this.SortingUploadedFilesGrid("Ascending", "Size(Bytes)", "in Numerical order", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Sorting Uploaded Files Grid")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Pending")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Variant 7")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Sort Direction", "Descending")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Column Name", "Size(Bytes)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Sort Method", "in Reverse-Numerical order")]
        public virtual void SortingUploadedFilesGrid_Variant7()
        {
            this.SortingUploadedFilesGrid("Descending", "Size(Bytes)", "in Reverse-Numerical order", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Presence of Search Field in Uploaded Files Grid")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rohan_AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AngularFileUpload")]
        public virtual void PresenceOfSearchFieldInUploadedFilesGrid()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Presence of Search Field in Uploaded Files Grid", new string[] {
                        "Rohan_AngularFileUpload",
                        "Must",
                        "AngularFileUpload"});
#line 130
this.ScenarioSetup(scenarioInfo);
#line 131
 testRunner.Given("I am on File Upload page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 132
 testRunner.When("I view the Uploaded Files Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 133
 testRunner.Then("I should see a Search field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 134
 testRunner.And("I should see a placeholder \'Search File Name...\' on Search field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Presence of Search Button")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rohan_AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AngularFileUpload")]
        public virtual void PresenceOfSearchButton()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Presence of Search Button", new string[] {
                        "Rohan_AngularFileUpload",
                        "Must",
                        "AngularFileUpload"});
#line 139
this.ScenarioSetup(scenarioInfo);
#line 140
 testRunner.Given("I am on File Upload page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 141
 testRunner.When("I view the Uploaded Files Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 142
 testRunner.Then("I should see a \'Search\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void ValidatingValuesWithDbOnSuccessfulUpload(string fileTitle, string file, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ignore"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validating values with db on Successful Upload", @__tags);
#line 146
this.ScenarioSetup(scenarioInfo);
#line 147
 testRunner.Given("I am on File Upload page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 148
 testRunner.When(string.Format("I enter \"{0}\" in FileTitle text-field", fileTitle), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 149
 testRunner.And(string.Format("I select file \"{0}\"", file), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 150
 testRunner.And("I click on \'Submit\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 151
 testRunner.Then("I should see a message \'Upload Successful\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 152
 testRunner.And("The values should get added in the database", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Validating values with db on Successful Upload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Test1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileTitle", "Test1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:File", "Desert")]
        public virtual void ValidatingValuesWithDbOnSuccessfulUpload_Test1()
        {
            this.ValidatingValuesWithDbOnSuccessfulUpload("Test1", "Desert", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Presence of Delete icon")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rohan_AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AngularFileUpload")]
        public virtual void PresenceOfDeleteIcon()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Presence of Delete icon", new string[] {
                        "Rohan_AngularFileUpload",
                        "Must",
                        "AngularFileUpload"});
#line 160
this.ScenarioSetup(scenarioInfo);
#line 161
 testRunner.Given("I am on File Upload page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 162
 testRunner.When("I view the Uploaded Files Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 163
 testRunner.Then("I should see the remove icon for each uploaded file in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void DeletingAnUploadedFile(string fileName, string titleName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Rohan_AngularFileUpload",
                    "Must",
                    "AngularFileUpload"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Deleting an uploaded file", @__tags);
#line 168
this.ScenarioSetup(scenarioInfo);
#line 169
 testRunner.Given("I am on File Upload page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 170
 testRunner.And(string.Format("I upload the file \"{0}\" with title \"{1}\"", fileName, titleName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 171
 testRunner.When(string.Format("I delete the file \"{0}\" with title \"{1}\"", fileName, titleName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 172
 testRunner.Then(string.Format("The file \"{0}\" with title \"{1}\" should be deleted from the Uploaded Files Grid", fileName, titleName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Deleting an uploaded file")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rohan_AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AngularFileUpload")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Jellyfish.jpg")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FileName", "Jellyfish.jpg")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TitleName", "uploadfile1")]
        public virtual void DeletingAnUploadedFile_Jellyfish_Jpg()
        {
            this.DeletingAnUploadedFile("Jellyfish.jpg", "uploadfile1", ((string[])(null)));
        }
    }
}
#pragma warning restore
#endregion
