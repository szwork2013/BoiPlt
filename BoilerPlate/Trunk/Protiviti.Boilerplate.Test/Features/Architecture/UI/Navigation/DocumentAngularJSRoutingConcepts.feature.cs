// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Protiviti.Boilerplate.Test.Features.Architecture.UI.Navigation
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class DocumentUINavigationAndRoutingConceptsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "DocumentAngularJSRoutingConcepts.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Document UI Navigation and Routing Concepts", "In order to document UI Navigation and Routing  concepts\r\nAs a team member\r\nI wan" +
                    "t to create content in the solution so team members can review and understand th" +
                    "e boilerplate navigation architecture.", ProgrammingLanguage.CSharp, new string[] {
                        "MikeWzorek",
                        "Sprint0"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Document UI Navigation and Routing Concepts")))
            {
                Protiviti.Boilerplate.Test.Features.Architecture.UI.Navigation.DocumentUINavigationAndRoutingConceptsFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Specify a section that should be on a page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Document UI Navigation and Routing Concepts")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("MikeWzorek")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("MikeWzorek")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint0")]
        public virtual void SpecifyASectionThatShouldBeOnAPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Specify a section that should be on a page", new string[] {
                        "MikeWzorek",
                        "Sprint0"});
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
  testRunner.Given("I have access to the solution", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 10
  testRunner.Then("I should be able to define a scenario with the following step", "Then I should see a \"Getting Started\" section", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 14
  testRunner.And("the step should verify the current page has an h2 with the text specified in the " +
                    "parameter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Specify a set of links that should be in a section")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Document UI Navigation and Routing Concepts")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("MikeWzorek")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("MikeWzorek")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint0")]
        public virtual void SpecifyASetOfLinksThatShouldBeInASection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Specify a set of links that should be in a section", new string[] {
                        "MikeWzorek",
                        "Sprint0"});
#line 17
this.ScenarioSetup(scenarioInfo);
#line 18
  testRunner.Given("I have access to the solution", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 19
  testRunner.Then("I should be able to define a scenario with the following step", @"And the ""Getting Started"" section should contain links to the the following pages
| LinkText												|
| AngularUI Router Wiki									|
| AngularUI Router as infrastructure of a large scale app |
| Limitations of Angular ngRoute provider					|
| Difference between ngRouter and ui-router				|
| AngularJS 2.0 Routing Design Document					|", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 29
  testRunner.And("the step should verify the current page has an h2 with the text specified in the " +
                    "parameter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
  testRunner.And("the step should verify the page has the specified links before the next h2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Follow a link on a page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Document UI Navigation and Routing Concepts")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("MikeWzorek")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("MikeWzorek")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint0")]
        public virtual void FollowALinkOnAPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Follow a link on a page", new string[] {
                        "MikeWzorek",
                        "Sprint0"});
#line 33
this.ScenarioSetup(scenarioInfo);
#line 34
  testRunner.Given("I have access to the solution", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 35
  testRunner.Then("I should be able to define a scenario with the following step", "And I click the \"AngularUI Router Wiki\" link", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 39
  testRunner.And("the step should verify the current page has an h2 with the text specified in the " +
                    "parameter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Describe the content of a section")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Document UI Navigation and Routing Concepts")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("MikeWzorek")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("MikeWzorek")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint0")]
        public virtual void DescribeTheContentOfASection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Describe the content of a section", new string[] {
                        "MikeWzorek",
                        "Sprint0"});
#line 42
this.ScenarioSetup(scenarioInfo);
#line 43
  testRunner.Given("I have access to the solution", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 44
  testRunner.Then("I should be able to define a scenario with the following step", "And the page should \"give an overview of the AngularUI Router routing framework\"", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 48
  testRunner.And("the step should do nothing but pass", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Documentation Scenario Example 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Document UI Navigation and Routing Concepts")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("MikeWzorek")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("MikeWzorek")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint0")]
        public virtual void DocumentationScenarioExample1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Documentation Scenario Example 1", new string[] {
                        "MikeWzorek",
                        "Sprint0"});
#line 51
this.ScenarioSetup(scenarioInfo);
#line 52
  testRunner.Given("I am a developer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 53
  testRunner.When("I view the \"ReadMeSample\" markdown file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 54
  testRunner.Then("I should see a \"Sample Section\" section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "LinkText"});
            table1.AddRow(new string[] {
                        "Sample Page 1"});
            table1.AddRow(new string[] {
                        "Sample Page 2"});
            table1.AddRow(new string[] {
                        "Sample Page 3"});
#line 55
  testRunner.And("the \"Sample Section\" section should contain links to the the following pages", ((string)(null)), table1, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Documentation Scenario Example 2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Document UI Navigation and Routing Concepts")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("MikeWzorek")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("MikeWzorek")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Sprint0")]
        public virtual void DocumentationScenarioExample2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Documentation Scenario Example 2", new string[] {
                        "MikeWzorek",
                        "Sprint0"});
#line 62
this.ScenarioSetup(scenarioInfo);
#line 63
 testRunner.Given("I am a developer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 64
 testRunner.When("I view the \"ReadMeSample\" markdown file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 65
  testRunner.And("I click the \"Sample Page 1\" link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 66
 testRunner.Then("I should see the \"Sample Page 1\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 67
  testRunner.And("the page should \"say I am an example of a page in the documentation\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
