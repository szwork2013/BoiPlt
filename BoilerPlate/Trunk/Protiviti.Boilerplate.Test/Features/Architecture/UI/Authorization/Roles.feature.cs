// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Protiviti.Boilerplate.Test.Features.Architecture.UI.Authorization
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class RolesFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Roles.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Roles", "     In order to view/add roles\r\n     As an Admin\r\n     I want to navigate to Rol" +
                    "es", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Roles")))
            {
                Protiviti.Boilerplate.Test.Features.Architecture.UI.Authorization.RolesFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Presence of roles section")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Roles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Preiksha_RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AjaySingh")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        public virtual void PresenceOfRolesSection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Presence of roles section", new string[] {
                        "Preiksha_RoleManagement",
                        "AjaySingh",
                        "RoleManagement",
                        "Must"});
#line 11
this.ScenarioSetup(scenarioInfo);
#line 12
       testRunner.Given("I login as Admin", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 13
       testRunner.When("I click on Roles from the Navigation bar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 14
       testRunner.Then("The table header should be \'Roles\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void CreatingNewRolesSuccessfully(string roleName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Preiksha_RoleManagement",
                    "AjaySingh",
                    "RoleManagement",
                    "Must"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Creating new roles successfully", @__tags);
#line 21
this.ScenarioSetup(scenarioInfo);
#line 22
       testRunner.Given("I am on the Add Role section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 23
       testRunner.When(string.Format("I enter \"{0}\"", roleName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
       testRunner.And("I click on Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
       testRunner.Then(string.Format("either a message \'Role {0} created successfully.\' or \'Name {0} is already taken.\'" +
                        " should be displayed", roleName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Creating new roles successfully")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Roles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Preiksha_RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AjaySingh")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Check1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RoleName", "Check1")]
        public virtual void CreatingNewRolesSuccessfully_Check1()
        {
            this.CreatingNewRolesSuccessfully("Check1", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Creating new roles successfully")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Roles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Preiksha_RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AjaySingh")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "!@Check2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RoleName", "!@Check2")]
        public virtual void CreatingNewRolesSuccessfully_Check2()
        {
            this.CreatingNewRolesSuccessfully("!@Check2", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Creating new roles successfully")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Roles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Preiksha_RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AjaySingh")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "1!@#$Aa+")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RoleName", "1!@#$Aa+")]
        public virtual void CreatingNewRolesSuccessfully_1Aa()
        {
            this.CreatingNewRolesSuccessfully("1!@#$Aa+", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Creating new roles successfully")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Roles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Preiksha_RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AjaySingh")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "TestRole")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RoleName", "TestRole")]
        public virtual void CreatingNewRolesSuccessfully_TestRole()
        {
            this.CreatingNewRolesSuccessfully("TestRole", ((string[])(null)));
        }
        
        public virtual void ProperDisplayOfDeletePop_Up(string roleName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Preiksha_RoleManagement",
                    "AjaySingh",
                    "RoleManagement",
                    "Must"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Proper Display of Delete pop-up", @__tags);
#line 38
this.ScenarioSetup(scenarioInfo);
#line 39
       testRunner.Given("I am on the Roles section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 40
       testRunner.When(string.Format("I Click on delete of \"{0}\"", roleName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 41
       testRunner.Then(string.Format("a pop up \'Delete {0}?\' should be displayed", roleName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 42
       testRunner.And("a message\'Are you sure you want to delete this role?\' should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
       testRunner.And("Cancel button should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
       testRunner.And("Delete Role button should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Proper Display of Delete pop-up")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Roles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Preiksha_RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AjaySingh")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "TestRole")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RoleName", "TestRole")]
        public virtual void ProperDisplayOfDeletePop_Up_TestRole()
        {
            this.ProperDisplayOfDeletePop_Up("TestRole", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Proper display of Search Section")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Roles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Preiksha_RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AjaySingh")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        public virtual void ProperDisplayOfSearchSection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Proper display of Search Section", new string[] {
                        "Preiksha_RoleManagement",
                        "AjaySingh",
                        "RoleManagement",
                        "Must"});
#line 54
this.ScenarioSetup(scenarioInfo);
#line 55
       testRunner.Given("I am on the Roles Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 56
       testRunner.When("I view the Roles table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 57
       testRunner.Then("I should see a placeholder \'Search...\' on search input field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 58
       testRunner.And("Search button should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Expand functionality of roles grid")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Roles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Preiksha_RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AjaySingh")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        public virtual void ExpandFunctionalityOfRolesGrid()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Expand functionality of roles grid", new string[] {
                        "Preiksha_RoleManagement",
                        "AjaySingh",
                        "RoleManagement",
                        "Must"});
#line 65
this.ScenarioSetup(scenarioInfo);
#line 66
       testRunner.Given("I am on the Roles Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 67
       testRunner.When("I double click on the arrow", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 68
       testRunner.Then("The grid should expand", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void RolesWithBlankNameShouldNotBeSaved(string roleName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Preiksha_RoleManagement",
                    "AjaySingh",
                    "RoleManagement",
                    "Must"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Roles with blank name should not be saved", @__tags);
#line 75
this.ScenarioSetup(scenarioInfo);
#line 76
       testRunner.Given("I am on the Add Role section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 77
       testRunner.When(string.Format("I enter \"{0}\"", roleName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 78
       testRunner.Then("Add button should not get enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Roles with blank name should not be saved")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Roles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Preiksha_RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AjaySingh")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RoleName", "")]
        public virtual void RolesWithBlankNameShouldNotBeSaved_()
        {
            this.RolesWithBlankNameShouldNotBeSaved("", ((string[])(null)));
        }
        
        public virtual void RoleDeletion(string roleName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Preiksha_RoleManagement",
                    "AjaySingh",
                    "RoleManagement",
                    "Must"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Role Deletion", @__tags);
#line 88
this.ScenarioSetup(scenarioInfo);
#line 89
       testRunner.Given("I am on the Roles Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 90
       testRunner.When(string.Format("I Click on delete of \"{0}\"", roleName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 91
       testRunner.And("I Click on Delete Role in the pop-up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
       testRunner.Then(string.Format("I should not see the \"{0}\" in Roles table", roleName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Role Deletion")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Roles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Preiksha_RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AjaySingh")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "UpdateRole")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RoleName", "UpdateRole")]
        public virtual void RoleDeletion_UpdateRole()
        {
            this.RoleDeletion("UpdateRole", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Role Deletion")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Roles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Preiksha_RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AjaySingh")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "1!@#$Aa+")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RoleName", "1!@#$Aa+")]
        public virtual void RoleDeletion_1Aa()
        {
            this.RoleDeletion("1!@#$Aa+", ((string[])(null)));
        }
        
        public virtual void FunctionalityOfPagination(string button, string page, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Preiksha_RoleManagement",
                    "AjaySingh",
                    "RoleManagement",
                    "Must"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Functionality of Pagination", @__tags);
#line 103
this.ScenarioSetup(scenarioInfo);
#line 104
          testRunner.Given("I am on the Roles Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 105
          testRunner.When(string.Format("I click the \"{0}\" button", button), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 106
          testRunner.Then(string.Format("I should navigate to \"{0}\" page", page), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Functionality of Pagination")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Roles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Preiksha_RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AjaySingh")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "First Page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Button", "First Page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Page", "Page: 1")]
        public virtual void FunctionalityOfPagination_FirstPage()
        {
            this.FunctionalityOfPagination("First Page", "Page: 1", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("View Add new roles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Roles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Preiksha_RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AjaySingh")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        public virtual void ViewAddNewRoles()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View Add new roles", new string[] {
                        "Preiksha_RoleManagement",
                        "AjaySingh",
                        "RoleManagement",
                        "Must"});
#line 116
this.ScenarioSetup(scenarioInfo);
#line 117
       testRunner.Given("I am on the Roles Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 118
       testRunner.When("I click on the Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 119
       testRunner.Then("Add Roles page should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 120
       testRunner.And("an hyperlink \'Back to list\' should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 121
       testRunner.And("A label \'Role Name:\' with an input box should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 122
       testRunner.And("An Add button should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Display of pagination in the grid")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Roles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Preiksha_RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AjaySingh")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        public virtual void DisplayOfPaginationInTheGrid()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Display of pagination in the grid", new string[] {
                        "Preiksha_RoleManagement",
                        "AjaySingh",
                        "RoleManagement",
                        "Must"});
#line 130
this.ScenarioSetup(scenarioInfo);
#line 131
          testRunner.Given("I am on the Roles Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 132
          testRunner.When("I view the Roles table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 133
          testRunner.Then("I should see First Page button in the footer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 134
          testRunner.And("I should see Previous Page button in the footer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 135
          testRunner.And("I should see the current page number as  \" Page: 1  \"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 136
          testRunner.And("I should see Next Page button in the footer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void ProperDisplayOfEditRolePage(string roleName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Preiksha_RoleManagement",
                    "AjaySingh",
                    "RoleManagement",
                    "Must"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Proper display of edit role page", @__tags);
#line 143
this.ScenarioSetup(scenarioInfo);
#line 144
       testRunner.Given("I am on the Roles Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 145
       testRunner.When(string.Format("I Click on edit of \"{0}\"", roleName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 146
       testRunner.Then(string.Format("I should navigate to Edit Role \"{0}\" page", roleName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 147
       testRunner.And("an hyperlink \'Back to list\' should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 148
       testRunner.And("A label \'Role Name:\' with an input box should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 149
       testRunner.And("An Update button should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Proper display of edit role page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Roles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Preiksha_RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AjaySingh")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Member")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RoleName", "Member")]
        public virtual void ProperDisplayOfEditRolePage_Member()
        {
            this.ProperDisplayOfEditRolePage("Member", ((string[])(null)));
        }
        
        public virtual void ErrorMessageOnCreatingRoleWithDuplicateName(string roleName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Preiksha_RoleManagement",
                    "AjaySingh",
                    "RoleManagement",
                    "Must"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Error message on creating role with duplicate name", @__tags);
#line 160
this.ScenarioSetup(scenarioInfo);
#line 161
       testRunner.Given("I am on the Add Role section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 162
       testRunner.When(string.Format("I enter \"{0}\"", roleName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 163
       testRunner.And("I click on Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
       testRunner.Then("an error message for duplicate \'Name Member is already taken.\' should be displaye" +
                    "d", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Error message on creating role with duplicate name")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Roles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Preiksha_RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AjaySingh")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Member")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RoleName", "Member")]
        public virtual void ErrorMessageOnCreatingRoleWithDuplicateName_Member()
        {
            this.ErrorMessageOnCreatingRoleWithDuplicateName("Member", ((string[])(null)));
        }
        
        public virtual void UpdatingRoleName(string roleName, string updatedRoleName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Preiksha_RoleManagement",
                    "AjaySingh",
                    "RoleManagement",
                    "Must"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Updating role name", @__tags);
#line 174
this.ScenarioSetup(scenarioInfo);
#line 175
       testRunner.Given(string.Format("I am on Edit Roles of \"{0}\"", roleName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 176
       testRunner.When(string.Format("I change the \"{0}\" to \"{1}\"", roleName, updatedRoleName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 177
       testRunner.And("I click on Update button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 178
       testRunner.Then(string.Format("either a message \'Role {0} updated successfully.\' or \'Name {0} is already taken.\'" +
                        " should be displayed", updatedRoleName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Updating role name")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Roles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Preiksha_RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AjaySingh")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "TestRole")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RoleName", "TestRole")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UpdatedRoleName", "UpdateRole")]
        public virtual void UpdatingRoleName_TestRole()
        {
            this.UpdatingRoleName("TestRole", "UpdateRole", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Proper display of Roles Table")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Roles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Preiksha_RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AjaySingh")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        public virtual void ProperDisplayOfRolesTable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Proper display of Roles Table", new string[] {
                        "Preiksha_RoleManagement",
                        "AjaySingh",
                        "RoleManagement",
                        "Must"});
#line 188
this.ScenarioSetup(scenarioInfo);
#line 189
       testRunner.Given("I am on the Roles section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 190
       testRunner.When("I view the Roles table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 191
       testRunner.Then("I should see a Table with header as \'Role\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void SearchingExistingRoles(string roleName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Preiksha_RoleManagement",
                    "AjaySingh",
                    "RoleManagement",
                    "Must"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Searching existing roles", @__tags);
#line 199
this.ScenarioSetup(scenarioInfo);
#line 200
       testRunner.Given("I am on the Roles Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 201
       testRunner.When(string.Format("I enter \"{0}\" in the Search", roleName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 202
       testRunner.And("I click on Search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 203
       testRunner.Then(string.Format("I should see role having the same name as \"{0}\"", roleName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Searching existing roles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Roles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Preiksha_RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AjaySingh")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Member")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RoleName", "Member")]
        public virtual void SearchingExistingRoles_Member()
        {
            this.SearchingExistingRoles("Member", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Collapse functionality of roles grid")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Roles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Preiksha_RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AjaySingh")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("RoleManagement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Must")]
        public virtual void CollapseFunctionalityOfRolesGrid()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Collapse functionality of roles grid", new string[] {
                        "Preiksha_RoleManagement",
                        "AjaySingh",
                        "RoleManagement",
                        "Must"});
#line 213
this.ScenarioSetup(scenarioInfo);
#line 214
       testRunner.Given("I am on the Roles Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 215
       testRunner.When("I click on the arrow", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 216
       testRunner.Then("The grid should collapse", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void RoleDeletionAndValidatingWithTheDatabase(string roleName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "dbTesting",
                    "Preiksha"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Role Deletion and validating with the database", @__tags);
#line 220
this.ScenarioSetup(scenarioInfo);
#line 221
       testRunner.Given("I am on the Roles Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 222
       testRunner.When(string.Format("I Click on delete of \"{0}\"", roleName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 223
       testRunner.And("I Click on Delete Role in the pop-up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 224
       testRunner.Then(string.Format("I should not see the \"{0}\" in Roles table in database", roleName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Role Deletion and validating with the database")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Roles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("dbTesting")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Preiksha")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "TestRole")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RoleName", "TestRole")]
        public virtual void RoleDeletionAndValidatingWithTheDatabase_TestRole()
        {
            this.RoleDeletionAndValidatingWithTheDatabase("TestRole", ((string[])(null)));
        }
    }
}
#pragma warning restore
#endregion
