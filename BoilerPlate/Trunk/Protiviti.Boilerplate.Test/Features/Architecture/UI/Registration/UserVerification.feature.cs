// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Protiviti.Boilerplate.Test.Features.Architecture.UI.Registration
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class VerificationFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "UserVerification.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Verification", "In order to get registered on the site\nAs a boilerplate solution user\nI want to s" +
                    "ubmit the verification code after submitting my contact information on the regis" +
                    "tration page", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Verification")))
            {
                Protiviti.Boilerplate.Test.Features.Architecture.UI.Registration.VerificationFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Registration using Coypu")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Verification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UserVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Complete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Coypu")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rohit")]
        public virtual void RegistrationUsingCoypu()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Registration using Coypu", new string[] {
                        "UserVerification",
                        "Complete",
                        "Coypu",
                        "Rohit"});
#line 10
this.ScenarioSetup(scenarioInfo);
#line 11
 testRunner.Given("I am on the home page and click Sign Up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 12
 testRunner.And("I fill all the required fields on the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.When("I click Submit button present on the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 14
 testRunner.Then("the form should be validated first", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 15
 testRunner.And("I should be redirected to the verification page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("UI for Verification page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Verification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UserVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Complete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Coypu")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rohit")]
        public virtual void UIForVerificationPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("UI for Verification page", new string[] {
                        "UserVerification",
                        "Complete",
                        "Coypu",
                        "Rohit"});
#line 21
this.ScenarioSetup(scenarioInfo);
#line 22
 testRunner.Given("I have eneterd valid credential in the registartion page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 23
 testRunner.When("I am on Verification Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
 testRunner.Then("I should see following buttons/fields on the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Authentication Provider on Verification page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Verification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UserVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Coypu")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Complete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rohit")]
        public virtual void AuthenticationProviderOnVerificationPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Authentication Provider on Verification page", new string[] {
                        "UserVerification",
                        "Coypu",
                        "Complete",
                        "Rohit"});
#line 30
this.ScenarioSetup(scenarioInfo);
#line 31
 testRunner.Given("I have eneterd valid credential in the registartion page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 32
 testRunner.When("I am on Verification Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "AuthenticationMethods"});
            table1.AddRow(new string[] {
                        "SMS"});
            table1.AddRow(new string[] {
                        "EMail"});
#line 33
 testRunner.Then("I should see following authentication methods on the page", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Unsuccessfull registeration with invalid Registration code")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Verification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UserVerification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Complete")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Coypu")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rohit")]
        public virtual void UnsuccessfullRegisterationWithInvalidRegistrationCode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Unsuccessfull registeration with invalid Registration code", new string[] {
                        "UserVerification",
                        "Complete",
                        "Coypu",
                        "Rohit"});
#line 42
this.ScenarioSetup(scenarioInfo);
#line 43
 testRunner.Given("I am on Verification Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 44
 testRunner.When("I enter invalid verification code", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 45
 testRunner.Then("I should get an error message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Successfull registeration with valid Registration code")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Verification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rohit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Pending")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Coypu")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("UserVerification")]
        public virtual void SuccessfullRegisterationWithValidRegistrationCode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Successfull registeration with valid Registration code", new string[] {
                        "Rohit",
                        "Pending",
                        "Coypu",
                        "UserVerification"});
#line 51
this.ScenarioSetup(scenarioInfo);
#line 52
 testRunner.Given("I am on Verification Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 53
 testRunner.When("I enter valid verification code", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 54
 testRunner.Then("I should be registered successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
