var Protiviti;
(function (Protiviti) {
    (function (Boilerplate) {
        (function (Client) {
            (function (Controllers) {
                'use strict';
                var controllerId = Client.Modules.RoleManager.controllers.editRole;
                angular.module(Client.Modules.RoleManager.Name).controller(controllerId, ['$scope', '$state', '$routeParams', '$stateParams', '$http', 'modalService', 'common', 'authService', 'breeze', 'dataservice', 'config', EditRoleController]);

                function EditRoleController($scope, $state, $routeParams, $stateParams, $http, modalService, common, authService, breeze, dataservice, config) {
                    var getLogFn = common.logger.getLogFn;
                    var log = getLogFn(controllerId);
                    var path = '';
                    var roleId = ($stateParams.roleId) ? $stateParams.roleId : '';

                    dataservice.initialize("RoleManager", config.remoteApiServiceBase);

                    $scope.initializing = true;
                    $scope.news = {
                        title: 'Protiviti Boilerplate',
                        description: 'Protiviti Boilerplate'
                    };
                    $scope.role = {};
                    $scope.oldRole = {};
                    $scope.newRole = { Id: '', Name: '' };
                    $scope.roleId = roleId;
                    $scope.title = (roleId.length <= 0) ? 'Add Role' : 'Edit Role';
                    $scope.buttonText = (roleId.length <= 0) ? 'Add' : 'Update';

                    $scope.message = '';
                    $scope.savedSuccessfully = false;

                    $scope.back = function () {
                        var mgr = dataservice.serviceManager();
                        mgr.rejectChanges();
                        dataservice.clear();
                        $state.go('roles');
                    };

                    $scope.getRole = function (roleId) {
                        dataservice.clear();
                        dataservice.filter = dataservice.getPredicate("Id", dataservice.FilterQueryOp.Equals, roleId);

                        return dataservice.search('Roles', (function (response) {
                            if (response.results != null && response.results.length >= 1) {
                                if (response.results.length >= 1)
                                    $scope.role = response.results[0];
                            } else {
                                dataservice.getMetadata().then(function () {
                                    var mgr = dataservice.serviceManager();
                                    var roleType = mgr.metadataStore.getEntityType("IdentityRole");
                                    roleType.setProperties({ autoGeneratedKeyType: breeze.AutoGeneratedKeyType.Identity });
                                    $scope.role = mgr.createEntity(roleType, { Name: '' });
                                });
                            }
                        }), (function (error) {
                            alert("Error loading role: " + error);
                        }));
                    };

                    $scope.saveRole = function () {
                        var newRole = {
                            Id: $scope.role.Id,
                            Name: $scope.role.Name
                        };
                        var data;
                        if (roleId.length <= 0) {
                            $http.post(Client.Modules.RoleManager.BaseUrl + '/SaveChanges', newRole).then(function (response) {
                                data = response.data;
                                showSuccessMessage(data);
                            }), (function (error) {
                                alert("Error saving role: " + error);
                            });
                        } else {
                            $http.put(Client.Modules.RoleManager.BaseUrl + '/UpdateRole', newRole).then(function (response) {
                                data = response.data;
                                showSuccessMessage(data);
                            }), (function (error) {
                                alert("Error updating role: " + error);
                            });
                        }
                    };

                    function showSuccessMessage(data) {
                        if (data.Succeeded == true) {
                            $scope.savedSuccessfully = true;
                            $scope.message = 'Role ' + ($scope.role.Name) + (roleId.length <= 0 ? ' created' : ' updated') + ' successfully.';
                        } else {
                            $scope.message = data.Errors[0];
                        }
                    }

                    function activate() {
                        var promises = [$scope.getRole($scope.roleId)];
                        $scope.message = "";
                        common.activateController(promises, controllerId).then(function () {
                            log('Activated Edit Role View');
                        });
                    }

                    activate();
                }
            })(Client.Controllers || (Client.Controllers = {}));
            var Controllers = Client.Controllers;
        })(Boilerplate.Client || (Boilerplate.Client = {}));
        var Client = Boilerplate.Client;
    })(Protiviti.Boilerplate || (Protiviti.Boilerplate = {}));
    var Boilerplate = Protiviti.Boilerplate;
})(Protiviti || (Protiviti = {}));
//# sourceMappingURL=editRoleController.js.map
